{"version":3,"sources":["turbine.js","InputField.js","SelectInput.js","TurbineBlades.js","TurbineTower.js","Background.js","TurbineVisual.js","TurbineCalculator.js","App.js","serviceWorker.js","index.js"],"names":["checkWithinRange","value","min","max","Error","calculateTurbinePower","windVelocity","towerHeight","bladeLength","elevation","a","T","L","v_r","h","ratedSpeed","currentSpeed","d","A","v","temperature","airDensity","p","air_density","Math","pow","g","bladeArea","PI","windSpeedAtTowerHeight","adjustedWindSpeed","units","type","system","InputField","props","mpsInMph","metersInFoot","results","round","convert","unit","htmlFor","name","className","label","id","SelectInput","optionElements","options","map","option","index","onChange","TurbineBlades","angleOffset","random","state","angle","time","this","setState","blades","style","transform","bladeWidthScale","scale","viewBox","preserveAspectRatio","overflow","x","y","width","points","fill","cx","cy","r","ref","node","xlinkHref","height","mask","React","Component","ReactAnimationFrame","TurbineTower","bladeYOffset","towerHeightScale","Background","offset","altitude","maxAltitude","seaYOffset","hillsYOffset","mountainNearYOffset","mountainFarYOffset","y1","x2","y2","gradientUnits","stopColor","x1","TurbineVisual","xmlns","xmlnsXlink","TurbineCalculator","update","bind","event","target","checked","powerInWatts","toLocaleString","undefined","maximumFractionDigits","error","message","calculatePower","formUpdate","step","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7239e5b7.chunk.js","sourcesContent":["/* Turbine calculation formulas */\n\n/**\n * Calculate wind velocity at a given tower height adjusting for wind shear\n * @see {@link https://en.wikipedia.org/wiki/Wind_gradient#Wind_turbines}\n * \n * @param {number} v_r Wind velocity (m/s) at reference height (without wind shear adjustment)\n * @param {number} h Height (m) of the wind turbine, should be between 20 and 200m\n * \n * @returns {number} Wind velocity adjusted for wind shear\n */\nfunction wind_velocity_at_elevation(v_r, h) {\n  const a = 0.3; // Hellman exponent\n  const h_r = 95; // Reference height in meters(maximum height affected by wind shear)\n\n  // Check if tower height is within range\n  checkWithinRange(h, 20, 200);\n\n  // Check for values under reference height\n  if (h < h_r) {\n    return v_r * Math.pow((h / h_r), a);\n  } else {\n    //Otherwise return input velocity\n    return v_r;\n  }\n}\n\n/**\n * Calculate the temperature at an altitude given temperature at sea level of 293° Kelvin.\n * \n * @param {number} a Altitude (m), range should be between 0 and 10,000m\n * \n * @returns {number} Temperature (K) at altitude\n */\nfunction temp_at(a) {\n  const T_s = 293, // Temperature at sea level assumed to be 293°K (68°F)\n    z = 0.0065; // Atmospheric lapse rate (K/m)\n\n  // Check if altitude is within range\n  checkWithinRange(a, 0, 10000);\n\n  return T_s - (a * z);\n}\n\n/**\n * Calculate the air pressure at altitude \n * \n * @param {number} T Temperature (K) at altitude\n * \n * @returns {number} Pressure (Pa) at altitude\n */\nfunction air_pressure(T) {\n  const g = 9.8, // Gravitational acceleration (m/s^2)\n    R = 287, // Air gas constant (J/kgK)\n    a = 0.0065, // Atmospheric lapse rate (K/m)\n    T_s = 293, // Temperature (K) at sea level\n    P_s = 101300; // Air pressure (Pa) at sea level\n\n  const exponent = g / (a * R);\n\n  return P_s * Math.pow(T / T_s, exponent);\n}\n\n/**\n * Calculate the area that the blades of the turbine sweep (area of circle)\n * \n * @param {number} L Length (m) of the blade, should be between 20 and 80m\n * \n * @returns {number} Blade sweep area (m^2)\n */\nfunction blade_sweep_area(L) {\n  // Check if blade length is within range\n  checkWithinRange(L, 20, 80);\n\n  return Math.PI * Math.pow(L, 2);\n}\n\n/**\n * Calculate air density from pressure and temperature.\n * \n * @param {number} p Air pressure (Pa)\n * @param {number} T Temperature (K)\n * \n * @returns Air density\n */\nfunction air_density(p, T) {\n  const R = 287; // Air gas constant (J/kgK)\n\n  return p / (R * T);\n}\n\n/**\n * Calculate the power in Watts (J/s)\n * \n * @param {number} d Air density (kg/m^3)\n * @param {number} A Blade sweep area (m^2)\n * @param {number} v Wind velocity, should be between 0 and 24.6 m/s, values below 3.6 m/s will result in no power\n * \n * @returns {number} Power in wWtts (J/s)\n */\nfunction power(d, A, v) {\n  const c = 0.33; // Power coefficient (maximum theoretical value is 0.593)\n\n  // Check if velocity is within range\n  if( v >= 3.6 && v <= 24.6) {\n    return (c * d * A * Math.pow(v, 3)) / 2\n  } else {\n    return 0;\n  }\n}\n\nfunction governor(ratedSpeed, currentSpeed) {\n  if( currentSpeed < ratedSpeed ) {\n    return currentSpeed;\n  }\n\n  return ratedSpeed;\n}\n\nfunction convert(value, type, system) {\n  const mpsInMph = 0.44704;\n  const metersInFoot = 0.3048;\n\n  let results = null;\n\n  if(type === \"length\") {\n    if(system === \"metric\") {\n      //convert to metric\n      results = value * metersInFoot;\n    } else if(system === \"us\"){\n      //convert to U.S.\n      results = value / metersInFoot;\n    }\n  } else if(type === \"speed\"){\n    if(system === \"metric\") {\n      //convert to metric\n      results = value * mpsInMph;\n    } else if(system === \"us\"){\n      //convert to U.S.\n      results = value / mpsInMph;\n    }\n  }\n  return results ? Math.round(results): results;\n}\n\n/**\n * Check if a value is a number and within specified range\n * @param {number} value Value to check\n * @param {number} min Minimum value can be (inclusive)\n * @param {number} max Maximum value can be (inclusive)\n */\nfunction checkWithinRange(value, min, max) {\n  if (typeof value !== 'number') {\n    throw new Error(`'${value}' is not a number.`);\n  }\n  if (value < min || value > max) {\n    throw new Error(`'${value}' is not between ${min} and ${max}.`);\n  }\n}\n\n/**\n * Calculate power of turbine in Watts (J/s)\n * \n * @param {*} windVelocity \n * @param {*} towerHeight \n * @param {*} bladeLength \n * @param {*} elevation \n */\nfunction calculateTurbinePower(windVelocity, towerHeight, bladeLength, elevation) {\n  if( bladeLength > towerHeight) {\n    throw new Error(\"Blade length cannot be greater than tower height.\");\n  }\n\n  const temperature = temp_at(elevation);\n  const airPressure = air_pressure(temperature);\n  const airDensity = air_density(airPressure, temperature);\n  const bladeArea = blade_sweep_area(bladeLength);\n  const windSpeedAtTowerHeight = wind_velocity_at_elevation(windVelocity, towerHeight);\n  const adjustedWindSpeed = governor(15, windSpeedAtTowerHeight);\n\n\n  return power(airDensity, bladeArea, adjustedWindSpeed);\n}\n\nexport {\n  calculateTurbinePower,\n  convert\n};","import React from \"react\";\nimport {convert} from './turbine.js';\nimport \"./InputField.css\";\n\nfunction units(type, system) {\n  if(type === \"length\") {\n    if(system === \"metric\") {\n      return \"m\";\n    } else if(system === \"us\"){\n      return \"ft\";\n    }\n  } else if(type === \"speed\"){\n    if(system === \"metric\") {\n      return \"m/s\";\n    } else if(system === \"us\"){\n      return \"mph\";\n    }\n  }\n  return \"\";\n}\n\nfunction InputField(props){\n  let value = props.system === \"us\" ? convert(props.value, props.unit, props.system) : props.value;\n\n  return (\n    <label htmlFor={props.name} className=\"input-field\">\n      <p className=\"slider-text\">\n        <span className=\"label\">{props.label} </span> \n        <span className=\"value\">{value}<span className=\"unit\"> {units(props.unit, props.system)}</span></span>\n      </p>\n      <input id={props.name} name={props.name} type=\"range\" {...props} />\n    </label>\n  );\n}\n\nexport default InputField;","import React from \"react\";\nimport \"./SelectInput.css\";\n\nfunction SelectInput(props) {\n\tlet optionElements = props.options.map( (option, index) => {\n\t\treturn <option key={index} value={option.value}>{option.label}</option>\n\t})\n\n\treturn (\n\t\t<div className=\"select-input\">\n\t\t\t<label htmlFor={props.name}>{props.label} \n\t\t\t\t<select id={props.name} name={props.name} value={props.value} onChange={props.onChange} >\n\t\t\t\t\t{ optionElements }\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t</div>\t\t\n\t\t);\n}\n\nexport default SelectInput;","import React from 'react';\nimport ReactAnimationFrame from 'react-animation-frame';\nimport './TurbineBlades.css';\n\nclass TurbineBlades extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      //Makes different turbines look less regular\n      const angleOffset = Math.random() * 120;\n\n      this.state = {\n        angle: 0 + angleOffset\n      }\n    }\n\n    onAnimationFrame(time) {\n        const windVelocity = this.props.windVelocity > 3 ? (this.props.windVelocity - 3) / 12 : 0;\n\n        // const speed = Math.abs(this.props.speed) > 1 ? 1 : Math.abs(this.props.speed);\n\n        this.setState({\n          angle:  (this.state.angle + windVelocity * 6) % 360\n        })\n\n        this.blades.style.transform = `rotate(${this.state.angle}deg)`;\n\n    }\n \n    render() {\n        const bladeLength = 350 * this.props.bladeLength / 200;\n\n        const bladeWidthScale = 0.6 * bladeLength / 175 + 0.4;\n        const scale = bladeLength / 175;\n\n        return (\n            <svg className=\"turbine-blades\" viewBox=\"-100 -100 200 200\" preserveAspectRatio=\"xMaxYMid meet\" overflow=\"visible\" x={this.props.x} y={this.props.y} width={this.props.width}>\n              <defs>\n                <symbol  id=\"Blade\" viewBox=\"-7.87 -100 15.73 100\" overflow=\"visible\"> \n                  <polyline className=\"blade-side-2\" points={`0,0 -2,-2.09 -2.25,-175 2.25,-175 10,-12 0,0`}/>\n                  <polygon className=\"blade-side-1\" points={`0,-175 -2.25,-175 -16,-40 0,0 \t\t`}/>\n                </symbol>\n              </defs>\n\n              <mask id=\"blade-center\">\n                <circle fill=\"#ffffff\" cx=\"0\" cy=\"0\" r=\"10\"/>\n              </mask>\n\n              <g ref={node => this.blades = node}>\n                <g transform={`scale(${scale})`}>\n                <use xlinkHref='#Blade' width='15.73' height='100' x='-7.87' y='-100' transform=\"rotate(-120)\"overflow='visible' />\n                <use xlinkHref='#Blade1' width='15.73' height='100' x='-7.87' y='-100' overflow='visible' />\n                <use xlinkHref='#Blade' width='15.73' height='100' x='-7.87' y='-100' overflow='visible' />\n                <use xlinkHref='#Blade' width='15.73' height='100' x='-7.87' y='-100' transform=\"rotate(120)\" overflow='visible' />\n                </g>\n              </g>\n\n              <g className=\"center\" transform={`scale(${bladeWidthScale})`}>\n                <circle className=\"hub-circle\" cx=\"0\" cy=\"0\" r=\"10\"/>\n                <polygon className=\"hub-shine\" points=\"0,0 -10,5 0,12.5 \" transform=\"rotate(180)\"mask=\"url(#blade-center)\" />\n                <circle className=\"hub-center\" cx=\"0\" cy=\"0\" r=\"5\"/>\n              </g>\n            </svg>\n        );\n    }\n}\n\nexport default ReactAnimationFrame(TurbineBlades);    ","import React from 'react';\nimport TurbineBlades from './TurbineBlades';\nimport './TurbineTower.css';\n\nclass TurbineTower extends React.Component {\n    render() {\n        //Converts tower height from meters into screen units\n        const towerHeight = 350 * this.props.towerHeight / 200;\n        const bladeYOffset = 350 - towerHeight - 600;\n        const towerHeightScale = 0.6 * towerHeight / 350 + 0.4;\n\n        return (\n            <svg className=\"turbine-tower\" viewBox=\"-15 0 30 500\" preserveAspectRatio=\"xMidYMax meet\" overflow=\"visible\" x={this.props.x} y={this.props.y} width={this.props.width} height={this.props.height}>\n              <g className=\"tower\" >\n                <polygon className=\"tower\" points={`${towerHeightScale * 14},0 -${towerHeightScale * 14},0 -${towerHeightScale * 5},-${towerHeight} ${towerHeightScale * 5},-${towerHeight}`}/>\n                <polygon className=\"tower-shadow\" points={`-1.5,0 -${towerHeightScale * 14},0 -${towerHeightScale * 5},-${towerHeight} -1,-${towerHeight}`}/>\n              </g>\n              <TurbineBlades \n                windVelocity={this.props.windVelocity} bladeLength={this.props.bladeLength}  x=\"-100\" y={bladeYOffset} \n                width=\"200\"\n              />\n            </svg>\n        );\n    }\n}\n\nexport default TurbineTower;","import React from 'react';\nimport './Background.css';\n\nclass Background extends React.Component {\n \n    render() {\n\t\t\t\tconst offset = 450 * this.props.altitude / this.props.maxAltitude;\n\n\t\t\t\tconst seaYOffset = offset * 70 + 30;\n\t\t\t\tconst hillsYOffset = offset * 1.25;\n\t\t\t\tconst mountainNearYOffset = offset * 0.95;\n\t\t\t\tconst mountainFarYOffset = offset * 0.6;\n\n        return (\n            <svg className=\"background\" viewBox=\"0 0 1920 1080\" preserveAspectRatio=\"xMinYMin meet\" overflow=\"visible\" x={this.props.x} y={this.props.y} width={this.props.width}>\n\t\t\t\t\t\t\t<defs>\n\t\t\t\t\t\t\t\t\t<linearGradient id=\"linear-gradient\" y1=\"55.2\" x2=\"18.36\" y2=\"55.2\" gradientUnits=\"userSpaceOnUse\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0\" stopColor=\"#fff\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.41\" stopColor=\"#fdfdfd\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#afafaf\" />\n\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t<radialGradient id=\"sky-gradient\" cx=\"0.33\" cy=\"0.33\" r=\"0.5\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.14\" stopColor=\"#bfe4ff\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#83caff\" />\n\t\t\t\t\t\t\t\t\t</radialGradient>\n\t\t\t\t\t\t\t\t\t<linearGradient id=\"mountain-far-gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.47\" stopColor=\"#66625a\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#a59e91\" />\n\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t<linearGradient id=\"mountain-near-gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.41\" stopColor=\"#998978\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#c7b299\" />\n\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t<linearGradient id=\"hills-gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.5\" stopColor=\"#718c5b\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#98b286\" />\n\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t<linearGradient id=\"sea-gradient\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"0.35\" stopColor=\"#3d5d7a\" />\n\t\t\t\t\t\t\t\t\t\t\t<stop offset=\"1\" stopColor=\"#6aa0ca\" />\n\t\t\t\t\t\t\t\t\t</linearGradient>\n\t\t\t\t\t\t\t\t\t<linearGradient id='linear-gradient-6' x1='234.14' y1='699.48' x2='293.43' y2='699.48' xlinkHref='#linear-gradient' />\n\t\t\t\t\t\t\t\t\t<radialGradient id='radial-gradient-2' cx='263.78' cy='295.28' r='14.7' xlinkHref='#linear-gradient' />\n\t\t\t\t\t\t\t</defs>\n\n\t\t\t\t\t\t\t<g id=\"background-layer\">\n\t\t\t\t\t\t\t\t<rect id=\"sky\" className=\"sky\" width=\"1920\" height=\"1080\" />\n\t\t\t\t\t\t\t\t<polygon id=\"mountain-far\" transform={`translate(0 ${mountainFarYOffset})`} points=\"1920.5 328.22 1858.41 289.54 1811.63 243.85 1749.52 206.86 1702.6 162.78 1601.22 221.8 1487.98 270.69 1383.33 276.74 1277.44 318.19 1177.52 254.51 1065.4 190.34 952.58 231.22 852.85 286.59 746.21 251.82 637.89 235.87 532.41 247.37 425.43 239.46 317.87 243.73 212.06 190.32 105.92 180.63 -0.5 178.6 -0.5 886.54 1920.5 886.54 1920.5 328.22\"/>\n\t\t\t\t\t\t\t\t<polygon id=\"mountain-near\" transform={`translate(0 ${mountainNearYOffset})`} points=\"1920.5 309.23 1811.63 312.06 1706.31 335.12 1602.58 285.26 1490.45 305.94 1434.6 261.46 1390.5 214.57 1282.18 162.85 1184.03 254.94 1069.15 310.47 965.46 338.99 853.15 352.88 749.86 278.4 645.37 204.03 535.65 219.27 428.54 215.72 320.8 223.04 216.15 257.29 109.6 215.98 -0.5 200.65 -0.5 887 1920.5 887 1920.5 309.23\"/>\n\t\t\t\t\t\t\t\t<path id=\"hills\" transform={`translate(0 ${hillsYOffset})`} d=\"M1920.5,1080H-.5V231.2c93.68,3.38,176.47,9.17,265.65,17.55,85.25,8,148.15-5.06,239.77.88,157.6,10.2,322.88-2.07,477.53-19.25,47.73-5.3,66.86-9.94,111.75-8.25,44.56,1.68,84.94,9.39,131.38,10.88,88.79,2.85,174.27-12.65,260.54-10.25,58,1.62,130.75,18.48,193.24,24.15,84.58,7.68,160.59-5,241.14-16.92Z\"/>\n\t\t\t\t\t\t\t\t<rect id=\"sea\"  transform={`translate(0 ${seaYOffset})`} y=\"790.52\" width=\"1920\" height=\"289.48\"/>\n\t\t\t\t\t\t\t</g>\n            </svg>\n        );\n    }\n}\n\nexport default Background;","import React from 'react';\nimport TurbineTower from './TurbineTower';\nimport Background from './Background';\nimport \"./TurbineVisual.css\";\n\nfunction TurbineVisual(props) {\n  const windVelocity = props.windVelocity <= 15 ? props.windVelocity : 15\n\n  return (\n  <div className=\"turbine-visual\">\n    <svg className=\"root-svg\" viewBox=\"0 0 1920 1080\" preserveAspectRatio=\"xMinYMin slice\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" >      \n\n      <Background altitude={props.altitude} maxAltitude=\"5000\"/>\n\n      {/*Background turbines*/}\n      <TurbineTower windVelocity={windVelocity} towerHeight={70} bladeLength={20} x=\"-100\" y=\"910\"/>\n      <TurbineTower windVelocity={windVelocity} towerHeight={70} bladeLength={20} x=\"240\" y=\"850\"/>\n      <TurbineTower windVelocity={windVelocity} towerHeight={70} bladeLength={20} x=\"590\" y=\"880\"/>\n\n      <TurbineTower windVelocity={windVelocity} towerHeight={props.towerHeight} bladeLength={props.bladeLength} x=\"-600\" y=\"1000\"/>\n    </svg>\n  </div>\n  );\n\n  //Scale is 20 to 35 or (1.5 times)\n}\n\nexport default TurbineVisual;","import React from 'react';\nimport {calculateTurbinePower} from './turbine.js';\nimport InputField from \"./InputField\";\nimport SelectInput from './SelectInput';\nimport TurbineVisual from './TurbineVisual.js'\nimport \"./TurbineCalculator.css\";\n\nclass TurbineCalculator extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      windVelocity: 0,\n      towerHeight: 80,\n      bladeLength: 20,\n      altitude: 0,\n      units: \"us\"\n    }\n\n    this.update = this.update.bind(this);\n  }\n\n  update(event) {\n    let value;\n\n    if(event.target.type === \"range\") {\n      if(event.target.name === \"bladeLength\") {\n        value = Math.min(+event.target.value, this.state.towerHeight / 2);\n      } else if( event.target.name === \"towerHeight\"){\n        value = Math.max(+event.target.value, this.state.bladeLength * 2);\n      } else {\n        value = +event.target.value;\n      }\n    } else if(event.target.type === \"checkbox\") {\n      value = event.target.checked;\n    } else {\n      value = event.target.value;\n    }\n\n    this.setState({\n      [event.target.name]: value      \n    });\n  }\n\n  calculatePower() {\n    try {\n      const powerInWatts = calculateTurbinePower(this.state.windVelocity, this.state.towerHeight, this.state.bladeLength, this.state.altitude);\n      return (\n        <div className=\"results\">\n          <h2>{(powerInWatts/1000).toLocaleString(undefined, { maximumFractionDigits: 0 })}<span className=\"unit\"> kW</span></h2>\n          <h3>Output from a single turbine</h3>\n        </div>\n        );\n    } catch( error ) {\n      return error.message;\n    }\n  }\n\n  render() {\n    let unitsOptions = [{label: 'Metric', value: 'metric'}, {label: 'U.S.', value: 'us'}];\n\n    return (\n      <div className=\"turbine-calculator\">\n\n        {this.calculatePower()}\n        <form className=\"inputs\" onChange={this.formUpdate} aria-label=\"Wind power calculator\">\n          <SelectInput name=\"units\" label=\"Units\" value={this.state.units} options={unitsOptions} onChange={this.update}/>\n          <InputField \n            name=\"towerHeight\" \n            min=\"40\"\n            max=\"200\"\n            value={this.state.towerHeight} \n            label=\"Tower height\" \n            unit=\"length\"\n            system={this.state.units}\n            onChange={this.update}\n          />\n          <InputField \n            name=\"bladeLength\" \n            min=\"20\"\n            max=\"80\" \n            value={this.state.bladeLength} \n            label=\"Blade length\" \n            unit=\"length\"\n            system={this.state.units}\n            onChange={this.update}\n          />\n          <InputField \n            name=\"windVelocity\" \n            min=\"0\"\n            max=\"24.6\"\n            value={this.state.windVelocity} \n            label=\"Wind velocity\" \n            unit=\"speed\"\n            step=\"0.2\"\n            system={this.state.units}\n            onChange={this.update}\n          />\n          <InputField \n            name=\"altitude\" \n            min=\"0\"\n            max=\"5000\"\n            value={this.state.altitude} \n            label=\"Altitude\" \n            unit=\"length\"\n            step=\"10\"\n            system={this.state.units}\n            onChange={this.update}\n          />\n        </form>\n        <TurbineVisual \n          bladeLength={this.state.bladeLength} \n          towerHeight={this.state.towerHeight}\n          altitude={this.state.altitude}\n          windVelocity={this.state.windVelocity}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default TurbineCalculator;","import React from 'react';\nimport TurbineCalculator from './TurbineCalculator.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Calculating wind power</h1>\n      <TurbineCalculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}